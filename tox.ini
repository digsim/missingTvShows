# to run for a specific environment, use ``tox -e ENVNAME``
# for tox to work propely download all dependencies into private repo with
# pip3 install --download /var/www/pypi/ -r requirements.txt
[gh]
python =
    3.12 = py312
    3.11 = py311, type
    3.10 = py310
    3.9 = py39
    
[tox]
envlist = lint, type, python{38,39,310,311,312}
skip_missing_interpreters = true
isolated_build = true

[testenv]
deps =
    check-manifest >= 0.42
    # If your project uses README.rst, uncomment the following:
    # readme_renderer
    flake8
    pytest
    build
    twine
    coverage
commands =
    check-manifest --ignore 'tox.ini,tests/**,.vscode/**,documentation/**'
    python -m build
    python -m twine check dist/*
    flake8 .
    py.test tests {posargs}
    coverage run --source=src/ --module pytest tests
    coverage report
    coverage html

[flake8]
exclude = .tox,*.egg,build,data,venv*
max-line-length = 88
extend-ignore = E501, E203
select = E,W,F


[testenv:lint]
description = run linters
skip_install = true
deps =
    black==22.12
commands = black {posargs:.}

[testenv:type]
description = run type check on code base
deps =
    mypy==1.7.1
    types_six
    types_colorama
set_env =
    {tty:MYPY_FORCE_COLOR = 1}
commands =
    mypy {posargs:src tests}


[testenv:package]
# launch with
# tox -e package
deps = pex
#commands = pex missingtvshows -r requirements.txt  -e missingtvshows.main:main -o missingtvshows.pex --no-index -f /tmp/wheel/
# We can add --disable-cache, otherwise be sure to rm -rf ~/.pex when not changing the version number between two runs of pex
commands =
#    pex . -o dist/missingtvshows26.pex -e mtvs.main:main  --python=/usr/local/bin/python2.6 -r pex_26_requirements.txt -r pex_private_requirements.txt -r pex_public_requirements.txt
    #pex . -o dist/missingtvshows27.pex -e mtvs.main:main  --python=/usr/bin/python2.7 -r pex_private_requirements.txt -r pex_public_requirements.txt
    pex . -o dist/missingtvshows_{env:RUNNER_OS}.pex -e mtvs.main.__main__:cli  --python-shebang="/usr/bin/env python3" -r requirements.txt



[testenv:docs]
basepython=python
changedir=docs
deps=-rrequirements_docs.txt
commands=
    sphinx-build -b html -d {envtmpdir}/doctrees .  {envtmpdir}/html
